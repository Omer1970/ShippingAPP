services:
  # Laravel Backend API
  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    container_name: shipmentapp_backend
    ports:
      - "8080:80"
    volumes:
      - ./backend:/var/www/html
      - ./backend/storage:/var/www/html/storage
      - ./backend/bootstrap/cache:/var/www/html/bootstrap/cache
    environment:
      - APP_ENV=local
      - APP_DEBUG=true
      - APP_URL=http://localhost:8080
      - DB_CONNECTION=pgsql
      - DB_HOST=db
      - DB_PORT=5432
      - DB_DATABASE=shipmentapp
      - DB_USERNAME=shipmentapp
      - DB_PASSWORD=shipmentapp123
      - REDIS_HOST=redis
      - REDIS_PORT=6379
      - QUEUE_CONNECTION=sync
      - SESSION_DRIVER=redis
      - CACHE_DRIVER=redis
      - SANCTUM_STATEFUL_DOMAINS=localhost,localhost:3000,127.0.0.1,127.0.0.1:8000,::1
      - AUTH_TOKEN_EXPIRY=24
      - AUTH_RATE_LIMIT=60
      # Dolibarr Connection
      - DOLIBARR_DB_HOST=${DOLIBARR_DB_HOST:-localhost}
      - DOLIBARR_DB_PORT=${DOLIBARR_DB_PORT:-3306}
      - DOLIBARR_DB_DATABASE=${DOLIBARR_DB_DATABASE:-dolibarr}
      - DOLIBARR_DB_USERNAME=${DOLIBARR_DB_USERNAME:-readonly}
      - DOLIBARR_DB_PASSWORD=${DOLIBARR_DB_PASSWORD:-}
    depends_on:
      - db
      - redis
    networks:
      - shipmentapp-network
    restart: unless-stopped

  # Angular Frontend
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    container_name: shipmentapp_frontend
    ports:
      - "3000:80"
    depends_on:
      - backend
    networks:
      - shipmentapp-network
    restart: unless-stopped

  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: shipmentapp_db
    environment:
      - POSTGRES_DB=shipmentapp
      - POSTGRES_USER=shipmentapp
      - POSTGRES_PASSWORD=shipmentapp123
    volumes:
      - postgres_data:/var/lib/postgresql/data
    ports:
      - "5432:5432"
    networks:
      - shipmentapp-network
    restart: unless-stopped

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: shipmentapp_redis
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    volumes:
      - redis_data:/data
    ports:
      - "6379:6379"
    networks:
      - shipmentapp-network
    restart: unless-stopped

networks:
  shipmentapp-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data: