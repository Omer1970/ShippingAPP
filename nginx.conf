# ShipmentApp Nginx Configuration
# Production-ready reverse proxy with SSL, security headers, and performance optimizations

user nginx;
worker_processes auto;
error_log /var/log/nginx/error.log notice;
pid /var/run/nginx.pid;

events {
    worker_connections 1024;
    use epoll;
    multi_accept on;
}

http {
    # Basic Settings
    include /etc/nginx/mime.types;
    default_type application/octet-stream;
    
    # Logging
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for" '
                    'rt=$request_time uct="$upstream_connect_time" '
                    'uht="$upstream_header_time" urt="$upstream_response_time"';
    
    access_log /var/log/nginx/access.log main;
    error_log /var/log/nginx/error.log warn;
    
    # Performance optimizations
    sendfile on;
    tcp_nopush on;
    tcp_nodelay on;
    keepalive_timeout 65;
    types_hash_max_size 2048;
    client_max_body_size 20M;
    client_body_timeout 12;
    client_header_timeout 12;
    send_timeout 10;
    
    # Gzip compression
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied any;
    gzip_comp_level 6;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/json
        application/javascript
        application/xml+rss
        application/atom+xml
        image/svg+xml
        application/vnd.ms-fontobject
        application/x-font-ttf
        application/x-font-opentype
        application/x-font-truetype
        font/opentype
        font/ttf
        font/eot
        font/otf;
    
    # Security headers
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "no-referrer-when-downgrade" always;
    add_header Content-Security-Policy "default-src 'self' http: https: data: blob: 'unsafe-inline'" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
    add_header X-Permitted-Cross-Domain-Policies "master-only" always;
    add_header X-Download-Options "noopen" always;
    
    # Rate limiting
    limit_req_zone $binary_remote_addr zone=api:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=auth:10m rate=5r/s;
    limit_req_zone $binary_remote_addr zone=general:10m rate=20r/s;
    
    # Connection limiting
    limit_conn_zone $binary_remote_addr zone=addr:10m;
    limit_conn addr 100;
    
    # SSL configuration
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_ciphers ECDHE-RSA-AES128-GCM-SHA256:ECDHE-RSA-AES256-GCM-SHA384:ECDHE-RSA-AES128-SHA256:ECDHE-RSA-AES256-SHA384;
    ssl_prefer_server_ciphers off;
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;
    
    # Upstream backend configuration
    upstream backend {
        least_conn;
        server backend:9000 max_fails=3 fail_timeout=30s;
        keepalive 32;
    }
    
    # Rate limiting for auth endpoints
    map $request_uri $auth_limit {
        ~^/api/auth/login  auth;
        ~^/api/auth/refresh auth;
        default general;
    }
    
    # Main server block - HTTP to HTTPS redirect
    server {
        listen 80;
        listen [::]:80;
        server_name shipmentapp.com www.shipmentapp.com api.shipmentapp.com;
        
        # Redirect all HTTP traffic to HTTPS
        return 301 https://$server_name$request_uri;
    }
    
    # Frontend server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name shipmentapp.com www.shipmentapp.com;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/shipmentapp.com.crt;
        ssl_certificate_key /etc/nginx/ssl/shipmentapp.com.key;
        
        # Security headers
        add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        
        # Root directory
        root /var/www/html;
        index index.html;
        
        # Handle Angular routing
        location / {
            try_files $uri $uri/ /index.html;
            
            # Cache static assets
            location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
                expires 1y;
                add_header Cache-Control "public, immutable";
                add_header X-Frame-Options "SAMEORIGIN" always;
            }
            
            # Security headers for all requests
            add_header X-Frame-Options "SAMEORIGIN" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "no-referrer-when-downgrade" always;
            add_header Content-Security-Policy "default-src 'self'; script-src 'self' 'unsafe-inline' 'unsafe-eval'; style-src 'self' 'unsafe-inline'; img-src 'self' data: https:; font-src 'self' data:; connect-src 'self' https://api.shipmentapp.com;" always;
        }
        
        # API proxy for frontend
        location /api {
            proxy_pass http://backend;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_set_header X-Forwarded-Port $server_port;
            proxy_cache_bypass $http_upgrade;
            proxy_buffering on;
            proxy_buffer_size 4k;
            proxy_buffers 8 4k;
            proxy_busy_buffers_size 8k;
            
            # CORS headers
            add_header Access-Control-Allow-Origin "https://shipmentapp.com" always;
            add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS" always;
            add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With" always;
            add_header Access-Control-Allow-Credentials "true" always;
            
            # Handle preflight requests
            if ($request_method = 'OPTIONS') {
                add_header Access-Control-Allow-Origin "https://shipmentapp.com";
                add_header Access-Control-Allow-Methods "GET, POST, PUT, DELETE, OPTIONS";
                add_header Access-Control-Allow-Headers "Content-Type, Authorization, X-Requested-With";
                add_header Access-Control-Allow-Credentials "true";
                add_header Access-Control-Max-Age 86400;
                add_header Content-Type text/plain;
                add_header Content-Length 0;
                return 204;
            }
            
            # Rate limiting
            limit_req zone=api burst=20 nodelay;
            limit_req_status 429;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            return 200 "healthy\n";
            add_header Content-Type text/plain;
        }
        
        # Security.txt
        location /.well-known/security.txt {
            return 200 "Contact: security@shipmentapp.com\nExpires: 2024-12-31T23:59:59.000Z\n";
            add_header Content-Type text/plain;
        }
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~* \.(conf|log|sql|bak|backup|old|tmp)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # API server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name api.shipmentapp.com;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/api.shipmentapp.com.crt;
        ssl_certificate_key /etc/nginx/ssl/api.shipmentapp.com.key;
        
        # Root directory for backend
        root /var/www/backend/public;
        index index.php;
        
        # Rate limiting
        limit_req zone=$auth_limit burst=10 nodelay;
        limit_req_status 429;
        
        # Main API location
        location / {
            try_files $uri $uri/ /index.php?$query_string;
            
            # Security headers
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "no-referrer" always;
            add_header Content-Security-Policy "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self';" always;
            add_header Strict-Transport-Security "max-age=31536000; includeSubDomains" always;
        }
        
        # PHP-FPM configuration
        location ~ \.php$ {
            fastcgi_pass backend;
            fastcgi_index index.php;
            fastcgi_param SCRIPT_FILENAME $realpath_root$fastcgi_script_name;
            include fastcgi_params;
            fastcgi_hide_header X-Powered-By;
            fastcgi_buffer_size 16k;
            fastcgi_buffers 4 16k;
            fastcgi_busy_buffers_size 32k;
            fastcgi_connect_timeout 300;
            fastcgi_send_timeout 300;
            fastcgi_read_timeout 300;
            
            # Security headers
            add_header X-Frame-Options "DENY" always;
            add_header X-Content-Type-Options "nosniff" always;
            add_header X-XSS-Protection "1; mode=block" always;
            add_header Referrer-Policy "no-referrer" always;
            add_header Content-Security-Policy "default-src 'none'; script-src 'self'; style-src 'self' 'unsafe-inline'; img-src 'self' data:; font-src 'self'; connect-src 'self';" always;
        }
        
        # Static files
        location ~* \.(js|css|png|jpg|jpeg|gif|ico|svg|woff|woff2|ttf|eot)$ {
            expires 1y;
            add_header Cache-Control "public, immutable";
            add_header X-Frame-Options "DENY" always;
            access_log off;
        }
        
        # Health check endpoint
        location /health {
            access_log off;
            try_files $uri $uri/ /index.php?$query_string;
        }
        
        # API documentation
        location /docs {
            try_files $uri $uri/ /index.php?$query_string;
            
            # Restrict access to documentation
            allow 127.0.0.1;
            allow 10.0.0.0/8;
            allow 172.16.0.0/12;
            allow 192.168.0.0/16;
            deny all;
        }
        
        # Block access to sensitive files
        location ~ /\. {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~ ~$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        location ~* \.(conf|log|sql|bak|backup|old|tmp|git|env)$ {
            deny all;
            access_log off;
            log_not_found off;
        }
        
        # Deny access to vendor and storage directories
        location ~ ^/(vendor|storage|node_modules|bootstrap/cache) {
            deny all;
            access_log off;
            log_not_found off;
        }
    }
    
    # Monitoring server block
    server {
        listen 443 ssl http2;
        listen [::]:443 ssl http2;
        server_name monitoring.shipmentapp.com;
        
        # SSL certificates
        ssl_certificate /etc/nginx/ssl/monitoring.shipmentapp.com.crt;
        ssl_certificate_key /etc/nginx/ssl/monitoring.shipmentapp.com.key;
        
        # Basic authentication for monitoring
        auth_basic "Monitoring Access";
        auth_basic_user_file /etc/nginx/.htpasswd;
        
        # Proxy to Grafana
        location / {
            proxy_pass http://grafana:3000;
            proxy_http_version 1.1;
            proxy_set_header Upgrade $http_upgrade;
            proxy_set_header Connection 'upgrade';
            proxy_set_header Host $host;
            proxy_set_header X-Real-IP $remote_addr;
            proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
            proxy_set_header X-Forwarded-Proto $scheme;
            proxy_cache_bypass $http_upgrade;
        }
    }
    
    # Default server block (catch-all)
    server {
        listen 80 default_server;
        listen [::]:80 default_server;
        listen 443 ssl default_server;
        listen [::]:443 ssl default_server;
        
        # SSL certificates (self-signed for default)
        ssl_certificate /etc/nginx/ssl/default.crt;
        ssl_certificate_key /etc/nginx/ssl/default.key;
        
        server_name _;
        
        # Deny all requests to undefined hosts
        return 444;
        
        # Log these requests
        access_log /var/log/nginx/deny.log;
    }
}

# Stream configuration for TCP/UDP load balancing (if needed)
stream {
    upstream postgres_backend {
        server db:5432;
    }
    
    server {
        listen 5432;
        proxy_pass postgres_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
    }
    
    upstream redis_backend {
        server redis:6379;
    }
    
    server {
        listen 6379;
        proxy_pass redis_backend;
        proxy_timeout 1s;
        proxy_responses 1;
        proxy_bind $remote_addr transparent;
    }
}